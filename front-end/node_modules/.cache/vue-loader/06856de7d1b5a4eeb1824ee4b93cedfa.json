{"remainingRequest":"/home/sinseon/root-cause-analysis-system/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sinseon/root-cause-analysis-system/front-end/src/components/common/SmallStats.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/sinseon/root-cause-analysis-system/front-end/src/components/common/SmallStats.vue","mtime":1622102405109},{"path":"/home/sinseon/root-cause-analysis-system/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1622102403704},{"path":"/home/sinseon/root-cause-analysis-system/front-end/node_modules/babel-loader/lib/index.js","mtime":1622102403644},{"path":"/home/sinseon/root-cause-analysis-system/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1622102403704},{"path":"/home/sinseon/root-cause-analysis-system/front-end/node_modules/vue-loader/lib/index.js","mtime":1622102404973}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Chart from '../../utils/chart';\nimport { nanoid } from '../../utils';\n\nexport default {\n  name: 'd-small-stats',\n  props: {\n    /**\n     * The element ID.\n     */\n    id: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label.\n     */\n    label: {\n      type: String,\n      default: 'Label',\n    },\n    /**\n     * The value.\n     */\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * The percentage number or string.\n     */\n    percentage: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * Whether is a value increase.\n     */\n    increase: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Whether is a value decrease.\n     */\n    decrease: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * The Chart.js options.\n     */\n    chartOptions: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    /**\n     * The chart dataset.\n     */\n    chartData: {\n      type: Array,\n      required: true,\n      default() {\n        return [];\n      },\n    },\n    /**\n     * The chart configuration. This may override every other setting.\n     */\n    chartConfig: {\n      type: Object,\n    },\n    /**\n     * The variation.\n     */\n    variation: {\n      type: String,\n      default: null,\n    },\n  },\n  computed: {\n    computedChartId() {\n      return this.id || `stats-small-${nanoid()}`;\n    },\n    computedPercentageModifier() {\n      return this.increase ? 'increase' : 'decrease';\n    },\n    computedVariationClass() {\n      return this.variation ? `stats-small--${this.variation}` : null;\n    },\n    computedBodyClass() {\n      if (this.variation === '1') {\n        return 'p-0 d-flex';\n      }\n\n      return 'px-0 pb-0';\n    },\n    computedInnerWrapperClass() {\n      if (this.variation === '1') {\n        return 'flex-column m-auto';\n      }\n\n      return 'px-3';\n    },\n    computedDataFieldClass() {\n      if (this.variation === '1') {\n        return 'text-center';\n      }\n\n      return null;\n    },\n    computedLabelClass() {\n      if (this.variation === '1') {\n        return null;\n      }\n\n      return 'mb-1';\n    },\n    computedValueClass() {\n      if (this.variation === '1') {\n        return 'my-3';\n      }\n\n      return 'm-0';\n    },\n    computedInnerDataFieldClass() {\n      if (this.variation === '1') {\n        return null;\n      }\n\n      return 'text-right align-items-center';\n    },\n    computedCanvasHeight() {\n      if (this.variation === '1') {\n        return 120;\n      }\n\n      return 60;\n    },\n  },\n  mounted() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [{\n            gridLines: false,\n            ticks: {\n              display: false,\n            },\n          }],\n          yAxes: [{\n            gridLines: false,\n            scaleLabel: false,\n            ticks: {\n              display: false,\n              isplay: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: Math.max(...this.chartData[0].data) + 1,\n            },\n          }],\n        },\n      },\n      ...this.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: 'line',\n        data: {\n          ...{ labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'] },\n          ...{\n            datasets: this.chartData,\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.chartConfig,\n    };\n\n    new Chart(this.$refs.canvas, chartConfig);\n  },\n};\n",{"version":3,"sources":["SmallStats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"SmallStats.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n    <d-card :class=\"['stats-small', computedVariationClass, 'card', 'card-small']\">\n        <d-card-body :class=\"[computedBodyClass]\">\n            <div :class=\"['d-flex', computedInnerWrapperClass]\">\n                <div :class=\"['stats-small__data', computedDataFieldClass]\">\n                    <span :class=\"['stats-small__label', 'text-uppercase', computedLabelClass]\">{{ label }}</span>\n                    <h6 :class=\"['stats-small__value', 'count', computedValueClass]\">{{ value }}</h6>\n                </div>\n                <div :class=\"['stats-small__data', computedInnerDataFieldClass]\">\n                    <span :class=\"['stats-small__percentage', `stats-small__percentage--${computedPercentageModifier}`]\">{{ percentage }}</span>\n                </div>\n            </div>\n            <canvas :height=\"computedCanvasHeight\" ref=\"canvas\" :class=\"[computedChartId]\"></canvas>\n        </d-card-body>\n    </d-card>\n</template>\n\n<script>\nimport Chart from '../../utils/chart';\nimport { nanoid } from '../../utils';\n\nexport default {\n  name: 'd-small-stats',\n  props: {\n    /**\n     * The element ID.\n     */\n    id: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label.\n     */\n    label: {\n      type: String,\n      default: 'Label',\n    },\n    /**\n     * The value.\n     */\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * The percentage number or string.\n     */\n    percentage: {\n      type: [Number, String],\n      default: 0,\n    },\n    /**\n     * Whether is a value increase.\n     */\n    increase: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Whether is a value decrease.\n     */\n    decrease: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * The Chart.js options.\n     */\n    chartOptions: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    /**\n     * The chart dataset.\n     */\n    chartData: {\n      type: Array,\n      required: true,\n      default() {\n        return [];\n      },\n    },\n    /**\n     * The chart configuration. This may override every other setting.\n     */\n    chartConfig: {\n      type: Object,\n    },\n    /**\n     * The variation.\n     */\n    variation: {\n      type: String,\n      default: null,\n    },\n  },\n  computed: {\n    computedChartId() {\n      return this.id || `stats-small-${nanoid()}`;\n    },\n    computedPercentageModifier() {\n      return this.increase ? 'increase' : 'decrease';\n    },\n    computedVariationClass() {\n      return this.variation ? `stats-small--${this.variation}` : null;\n    },\n    computedBodyClass() {\n      if (this.variation === '1') {\n        return 'p-0 d-flex';\n      }\n\n      return 'px-0 pb-0';\n    },\n    computedInnerWrapperClass() {\n      if (this.variation === '1') {\n        return 'flex-column m-auto';\n      }\n\n      return 'px-3';\n    },\n    computedDataFieldClass() {\n      if (this.variation === '1') {\n        return 'text-center';\n      }\n\n      return null;\n    },\n    computedLabelClass() {\n      if (this.variation === '1') {\n        return null;\n      }\n\n      return 'mb-1';\n    },\n    computedValueClass() {\n      if (this.variation === '1') {\n        return 'my-3';\n      }\n\n      return 'm-0';\n    },\n    computedInnerDataFieldClass() {\n      if (this.variation === '1') {\n        return null;\n      }\n\n      return 'text-right align-items-center';\n    },\n    computedCanvasHeight() {\n      if (this.variation === '1') {\n        return 120;\n      }\n\n      return 60;\n    },\n  },\n  mounted() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [{\n            gridLines: false,\n            ticks: {\n              display: false,\n            },\n          }],\n          yAxes: [{\n            gridLines: false,\n            scaleLabel: false,\n            ticks: {\n              display: false,\n              isplay: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: Math.max(...this.chartData[0].data) + 1,\n            },\n          }],\n        },\n      },\n      ...this.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: 'line',\n        data: {\n          ...{ labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'] },\n          ...{\n            datasets: this.chartData,\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.chartConfig,\n    };\n\n    new Chart(this.$refs.canvas, chartConfig);\n  },\n};\n</script>\n"]}]}